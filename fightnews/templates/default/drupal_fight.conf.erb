# -*- mode: nginx; mode:autopair; mode: flyspell-prog; ispell-local-dictionary: "american" -*-
### Drupal configuration file for Drupal. Mostly stolen from
### http://github.com/yhager/nginx_drupal.


# Drupal 404 from can impact performance. If using a module like
# search404 then 404's *have *to be handled by Drupal. Uncomment to
# relay the handling of 404's to Drupal.
# error_page 404 /index.php;

# Disallow access to .git directory: return 404 as not to disclose
# information
location /.git {
    return 404;
}

# Disallow access to patches directory.
location /patches {
    return 404;
}

# Disallow access to drush backup directory.
location /backup {
    return 404;
}


# Disable access logs for robots.txt.
location /robots.txt {
    access_log off;
}

# Replicate the Apache <FilesMatch> directive of Drupal standard
# .htaccess. Disable access to any code files. Return a 404 to curtail
# information disclosure. Hide also the text files.
location ~* ^.+(\.(?:htaccess|txt|engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
    return 404; 
}

# If accessing an image generated by imagecache, serve it directly if
# available, if not relay the request to Drupal to (re)generate the
# image.
location ~* files/styles {
    access_log off;
    expires 30d;
    try_files $uri @drupal;
}

# RSS feed support.
location = /rss.xml {
    try_files $uri @drupal;
}

# XML Sitemap support.
location = /sitemap.xml {
    try_files $uri @drupal;
}

# Support for favicon. Return a 204 (No Content) if the favicon
# doesn't exist.
location = /favicon.ico {
    try_files /favicon.ico =204;
}

# All static files will be served directly.
location ~* ^.+\.(?:css|js|jpg|jpeg|gif|ico|png|html|xml)$ {
    access_log        off;
    expires           30d;
}

# Keep a tab on the "big" static files.
location ~* ^.+\.(?:m4a|mp3|mp4|mov|ogg|flv|pdf|ppt[x]*)$ {
    expires 30d;
}

# Replicate the clean URL rewrite rule for nginx. Define a named
# location that can be referenced elsewhere. This implements all
# Drupal handling. 
location @drupal {
    rewrite ^/(.*)$ /index.php?q=$1 last;
}

# First we try the cache.
location / {
  try_files $uri @cache;
}

# We define a named location for the cache.
location @cache {
  # If there's a cookie with a user ID then that means that
  # it's a logged in user. Relay to Drupal.
  if ($http_cookie ~ "DRUPAL_UID" ) {
    return 405;
  }
  # If the HTTP request method differs from GET or HEAD then
  # relay to Drupal.
  if ($request_method !~ ^(GET|HEAD)$ ) {
    return 405;
  }
  # The error page for the 405 (Method not Allowed) in this
  # context consists in relaying the request to Drupal for
  # processing.
  error_page 405 = @drupal;

  # Now for some header tweaking. We use a date that differs
  # from stock Drupal. Everyone seems to be using their
  # birthdate. Why go against the grain?
  add_header Expires "Tue, 13 Jun 1977 03:45:00 GMT";
  # We bypass all delays in the post-check and pre-check
  # parameters of Cache-Control. Both set to 0.
  add_header Cache-Control "must-revalidate, post-check=0, pre-check=0";
  # Funny...perhaps. Egocentric? Damn right!;
  add_header X-Header "Boost Hel√°s Avril 1.0";

  # We try each boost URI in succession, if every one of them
  # fails then relay to Drupal.
  try_files /cache/normal/$host/${uri}_.html /cache/perm/$host/${uri}_.css /cache/perm/$host/${uri}_.js /cache/$host/0$uri.html /cache/$host/0${uri}/index.html @drupal;
}


########## Security measures ##########                           unix:/tmp/php-cgi/php-cgi.socket;

# Restrict access to the strictly necessary PHP files. Reducing the
# scope for exploits. Handling of PHP code and the Drupal event loop.
location ~* ^/(?:index|boost_stats|update|cron)\.php$ {
  #fastcgi_pass 127.0.0.1:1020; 
  fastcgi_pass unix:/var/run/php5-fpm.socket;
  # Filefield Upload progress
  # http://drupal.org/project/filefield_nginx_progress support
  # through the NgninxUploadProgress modules.
  #track_uploads uploads 60s;
}

# Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
  return 404; 
}
## Include the boost configuration.
# This uses drush for updating the site and running cron.
#include sites-available/drupal_boost_drush_fight.conf; 
# This uses the regular web interface for updates and running cron.
#include sites-available/drupal_boost.conf; 
